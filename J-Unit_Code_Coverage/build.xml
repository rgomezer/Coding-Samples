<!-- Rodolfo Gomez -->
<!-- 5/31/16 -->
<!-- SE433 -->
<!-- Unit Testing and Code Coverage -->
<project name="Unit Testing and Code Coverage" default="coverage" basedir=".">
  <description>
    Ant build file
  </description>
  
  <!-- The properties are set in build.properties -->
  <property file="build.properties" />

  <path id="junit.classpath">
    <fileset dir="${junit}">
      <include name="*.jar" />
    </fileset>
  </path>

  <path id="cobertura.classpath">
    <fileset dir="${cobertura}">
      <include name="cobertura-2.1.1.jar" />
      <include name="lib/**/*.jar" />
    </fileset>
  </path>

  <taskdef classpathref="cobertura.classpath" resource="tasks.properties"/>

  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory -->
    <mkdir dir="${bin}"/>
		<mkdir dir="${instrumented}" />
		<mkdir dir="${reports.xml}" />
		<mkdir dir="${reports.html}" />
		<mkdir dir="${coverage.xml}" />
		<mkdir dir="${coverage.summaryxml}" />
		<mkdir dir="${coverage.html}" />
  </target>
  
  <target name="compile" depends="init"
          description="compile the source " >
    <!-- Compile the java code from ${src} into ${bin} -->
    <javac includeantruntime="false"
		   		 srcdir="${src}" 
		   		 destdir="${bin}" 
		   		 debug="on">
	 		<classpath refid="junit.classpath"/>
    </javac>
  </target>
  
  <target name="test1" depends="compile"> 
    <!-- Run junit tests -->
    <junit printsummary="yes" fork="yes" haltonfailure="off">
      <classpath location="${bin}"/>
	  	<classpath refid="junit.classpath"/>
      <formatter type="plain"/>
      <test name="edu.depaul.se433.OrdersTest"/>
      <test name="edu.depaul.se433.StringUtilTest"/>
    </junit>
  </target>   
  
  <target name="instrument" depends="init,compile">
		<!--
			Remove the coverage data file and any old instrumentation.
		-->
		<delete file="cobertura.ser"/>
		<delete dir="${instrumented}" />

		<!--
			Instrument the application classes, writing the
			instrumented classes into ${instrumented}.
		-->
		<cobertura-instrument todir="${instrumented}">
			<!--
				The following line causes instrument to ignore any
				source line containing a reference to log4j, for the
				purposes of coverage reporting.
		  -->
			<ignore regex="org.apache.log4j.*" />

		  <fileset dir="${bin}">
				<!--
				 	Instrument all the application classes, but
					don't instrument the test classes.
			  -->
			  <include name="**/*.class" />
				<exclude name="**/*Test.class" />
			</fileset>
		</cobertura-instrument>
  </target>
	
  <property name="testcase" value="edu.depaul.se433.OrdersTest" />
  <property name = "testcase2" value="edu.depaul.se433.StringUtilTest"/>
  <target name="test2" depends="init,compile">
    <junit fork="yes">
      <!--
	  		Note the classpath order: instrumented classes are before the
	  		original (uninstrumented) classes.  This is important.
      -->
      <classpath location="${instrumented}" />
      <classpath location="${bin}" />
      <classpath refid="junit.classpath" />
			
      <!--
	  		The instrumented classes reference classes used by the
	  		Cobertura runtime, so Cobertura and its dependencies
	  		must be on your classpath.
      -->
      <classpath refid="cobertura.classpath" />

      <formatter type="xml" />
			
			<test name="${testcase}" todir="${reports.xml}" if="testcase" />
			<batchtest todir="${reports.xml}" unless="testcase">
				<fileset dir="${src}">
					<include name="**/*Test.java" />
				</fileset>
			</batchtest>
			<test name="${testcase2}" todir="${reports.xml}" if="testcase2" />
			<batchtest todir="${reports.xml}" unless="testcase2">
				<fileset dir="${src}">
					<include name="**/*Test.java" />
				</fileset>
			</batchtest>
    </junit>
		
		<junitreport todir="${reports.xml}">
			<fileset dir="${reports.xml}">
				<include name="TEST-*.xml" />
			</fileset>
			<report format="frames" todir="${reports.html}" />
		</junitreport>
  </target>

	<target name="coverage-report-xml">
		<!--
			Generate an XML file containing the coverage data using
			the "srcdir" attribute.
		-->
		<cobertura-report srcdir="${src}" destdir="${coverage.xml}" format="xml" />
	</target>

	<target name="summary-coverage-report">
		<!--
			Generate an summary XML file containing the coverage data using
			the "srcdir" attribute.
		-->
		<cobertura-report srcdir="${src}" destdir="${coverage.summaryxml}" format="summaryXml" />
	</target>

	<target name="coverage-report-html">
		<!--
			Generate a series of HTML files containing the coverage
			data in a user-readable form using nested source filesets.
		-->
		<cobertura-report destdir="${coverage.html}">
			<fileset dir="${src}">
				<include name="**/*.java"/>
				<exclude name="**/*Test.java"/>
			</fileset>
		</cobertura-report>
	</target>

	<target name="coverage" 
		depends="compile,instrument,test2,coverage-report-xml,summary-coverage-report,coverage-report-html" 
		description="Compile, instrument ourself, run the tests and generate JUnit and coverage reports."/>

  <target name="clean">
    <!-- Delete the ${bin} folder -->
    <delete dir="${bin}"/>
		<delete dir="${instrumented}" />
		<delete dir="${reports}" />
		<delete file="cobertura.log" />
		<delete file="cobertura.ser" />
  </target>

</project>
